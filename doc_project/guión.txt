- Instalar node, angular-cli, crear app de empleados
- Cambiar título
- Crear componente lista-empleados. Crear var empleado, mostrarla en el componente, mostrar
componente en el padre
- Crear modelo Empleado y cambiar var empleado a una instancia de Empleado. Mostrarla en
el componente
- Cambio de datos con [(ngModel)]
- Añadir el id al empleado (inmutable por app). Crear interfaz EmpleadosIntService.
Crear EmpleadosMockService con ng generate service services/empleados-mock. 
Mostrar lista de empleados.
- Master - Detail
- Master - detail component
- EmpleadosIntService trabaja con observables
- Ejercicio: servicio de mensajes app-wide. Dar las directrices básicas (un servicio - buzón de mensajes,
produce el EmpleadosMockService y consume un nuevo componente MensajesComponent)
- Añadir un empleado. Ejercicio: deshabilitar el botón de Guardar y habilitarlo
sólo cuando estemos en modo nuevo empleado (en los commits esto está hecho más adelante. La solución
aquí sería que el padre nos lo comunicara mediante un @Input())
- Enrutamiento. Primero enrutamiento simple y luego complejo. Añadir hiperenlace en el app-root
(esto en git está más adelante).
Obtener el empleado en detalle a través de la url. Esto da un problema al seleccionar
otro empleado con el componente mostrado, porque no se vuelve a invocar ngOnInit,
con lo que no se actualizan los datos, por lo que necesitamos comunicación a través de 
un servicio intermedio y subscripción a un subject para actualizar los detalles del empleado.
Necesitamos mantener las dos opciones porque cuando copiamos la ruta en la url para acceder
a detalle empleado no hay ningún empleado seleccionado en el padre.
- Ejercicio: que al acceder al detalle a través de la ruta directa aparezca seleccionado
el empleado correspondiente en la lista (más adelante en el git)
- Como añadir empleado deja de funcionar, ejercicio: utilizar el mismo servicio de comunicación
para actualizar la lista de empleados (explicar el this.route.url.subscribe en detalle-empleado
para saber si estamos en detalle o en nuevoEmpleado)
- Ejercicio: Nuevo componente Dashboard que utiliza el mismo servicio de comunicación
con DetalleEmpleadoComponent. Muestra 4 empleados en pantalla, pasarles éste código del
template, y el .css del dashboard component:

        <div class="grid grid-pad">
            <a *ngFor="..." class="col-1-4" ...>
                <div class="module empleado">
                    <h4>...</h4>
                </div>
            </a>
        </div>